{"version":3,"sources":["../../src/helpers/util.js"],"names":["includes","array","key","indexOf","isString","maybeString","isObject","maybeObject","isFunction","maybeFunction","pick","obj","keys","reduce","soFar","undefined","mapObject","object","func","Object","mergeObjects","sources","concat","Array","prototype","uniqueKeys","apply","map","filter","value","index","self","assign","source","startsWith","string","target","String","slice","length","ucfirst","str","charAt","toUpperCase","substr","upperSnakeCase","split","letter","charCode","charCodeAt","getGerundName","name","replace","getPluralName"],"mappings":"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","file":"util.js","sourcesContent":["\nexport const includes = (array, key) =>\n  array.indexOf(key) !== -1;\n\nexport const isString = maybeString =>\n  typeof maybeString === 'string';\n\nexport const isObject = maybeObject =>\n  typeof maybeObject === 'object';\n\nexport const isFunction = maybeFunction =>\n  typeof maybeFunction === 'function';\n\nexport const pick = (obj, ...keys) =>\n  keys.reduce((soFar, key) => {\n    if (includes(keys, key) && obj[key] !== undefined) {\n      soFar[key] = obj[key]; // eslint-disable-line no-param-reassign\n    }\n    return soFar;\n  }, {});\n\nexport const mapObject = (object, func) =>\n  Object.keys(object).reduce((soFar, key) => {\n    soFar[key] = func(object[key]); // eslint-disable-line no-param-reassign\n    return soFar;\n  }, {});\n\nexport const mergeObjects = (object, ...sources) => {\n  const {concat} = Array.prototype;\n  const uniqueKeys = concat.apply(Object.keys(object), sources.map(Object.keys))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  return uniqueKeys.reduce((soFar, key) => {\n    soFar[key] = Object.assign(soFar[key] || {}, ...sources.map(source => source[key] || {})); // eslint-disable-line no-param-reassign\n    return soFar;\n  }, object);\n};\n\nexport const startsWith = (string, target) =>\n  String(string).slice(0, target.length) === target;\n\nexport const ucfirst = str =>\n  str.charAt(0).toUpperCase() + str.substr(1);\n\nexport const upperSnakeCase = string =>\n  String(string.split('').reduce((soFar, letter, index) => {\n    const charCode = letter.charCodeAt(0);\n    return soFar + (index && charCode < 97 ? `_${letter}` : letter).toUpperCase();\n  }, ''));\n\nexport const getGerundName = name =>\n  `${name.replace(/e$/, '')}ing`;\n\nexport const getPluralName = name =>\n  `${name}s`;\n"]}